(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{579:function(_,v,t){"use strict";t.r(v);var a=t(7),s=Object(a.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h2",{attrs:{id:"一、概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、概述"}},[_._v("#")]),_._v(" 一、概述")]),_._v(" "),t("h3",{attrs:{id:"_1-1定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1定义"}},[_._v("#")]),_._v(" 1.1定义")]),_._v(" "),t("p",[_._v("操作系统的作用在于：")]),_._v(" "),t("blockquote",[t("ul",[t("li",[_._v("管理应用程序")]),_._v(" "),t("li",[_._v("为应用程序提供服务")]),_._v(" "),t("li",[_._v("杀死应用程序")]),_._v(" "),t("li",[_._v("资源管理")]),_._v(" "),t("li",[_._v("管理外设/分配资源")])])]),_._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://gitee.com/lee8150951/picture-bed/raw/master/images/202202092036204.png",alt:"image-20220209203558590"}}),_._v(" "),t("p",[_._v("操作系统在另一方面起到的是承上启下的作用，它是直接面向于硬件资源的")]),_._v(" "),t("p",[_._v("操作系统位于应用软件之下，为应用软件提供服务支撑")]),_._v(" "),t("p",[_._v("Linux，Windows，Android界面属于外壳shell，其作用是与User交互，而不是内核kernel，而kernel是研究重点，在shell之下")]),_._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://gitee.com/lee8150951/picture-bed/raw/master/images/202202092039114.png",alt:"image-20220209203916812"}}),_._v(" "),t("p",[_._v("操作系统最主要的由三大块组成：CPU，内存，磁盘")]),_._v(" "),t("h3",{attrs:{id:"_1-2特征"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2特征"}},[_._v("#")]),_._v(" 1.2特征")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("并发")]),_._v("(指一段时间内多个程序运行；而并行是指一个时间点上多个程序运行，要求多个CPU)：计算机系统中同时存在多个运行的程序，需要OS管理和调度")]),_._v(" "),t("li",[t("strong",[_._v("共享")]),_._v("：“同时”访问或互斥共享")]),_._v(" "),t("li",[t("strong",[_._v("虚拟")]),_._v("：利用多道程序设计技术，让每一个用户都觉得有一个计算机专门为他服务")]),_._v(" "),t("li",[t("strong",[_._v("异步")]),_._v("：程序的执行不是一步到底的，而是走走停停，向前推进的速度不可预知，但只要运行环境相同，OS要保证程序运行的结果也相同")])]),_._v(" "),t("h2",{attrs:{id:"二、操作系统启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、操作系统启动"}},[_._v("#")]),_._v(" 二、操作系统启动")]),_._v(" "),t("p",[_._v("操作系统本身不是放在memory（内存）中的，而是存放在disk（硬盘），通过BIOS提供支持")]),_._v(" "),t("p",[_._v("BIOS的主要功能就是在计算机上电之后开始检测各种各样的外设（基本功能），检查完毕后加载相应的软件进行执行（除了OS之外还有一个bootloader），bootloader可以将OS从硬盘中加载到硬盘中")]),_._v(" "),t("p",[_._v("BIOS从一个特定地址开始执行，当电脑通电时，段寄存器CS和指令寄存器IP能够确定一个内存地址")]),_._v(" "),t("p",[_._v("完成以上操作之后计算机开始进行自检，自检没有出现后通过bootloader将OS放到内存中")]),_._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://gitee.com/lee8150951/picture-bed/raw/master/images/202202101541108.png",alt:"image-20220210154103218"}}),_._v(" "),t("h2",{attrs:{id:"三、操作系统与设备、程序交互"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、操作系统与设备、程序交互"}},[_._v("#")]),_._v(" 三、操作系统与设备、程序交互")]),_._v(" "),t("ul",[t("li",[_._v("操作系统与设备进行交互时通过的是"),t("strong",[_._v("中断")]),_._v("和"),t("strong",[_._v("IO")]),_._v("进行处理的")]),_._v(" "),t("li",[_._v("操作系统与应用程序进行交互时通过"),t("strong",[_._v("系统调用")]),_._v("和"),t("strong",[_._v("异常")]),_._v("提供相应服务")])]),_._v(" "),t("h3",{attrs:{id:"_3-1基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1基本概念"}},[_._v("#")]),_._v(" 3.1基本概念")]),_._v(" "),t("p",[t("strong",[_._v("系统调用")]),_._v("：应用程序主动向操作系统发出的服务请求")]),_._v(" "),t("p",[t("strong",[_._v("异常")]),_._v("：非法指令或者其他坏的处理状态，例如内存出错（来源于不良的应用程序）")]),_._v(" "),t("p",[t("strong",[_._v("中断")]),_._v("：来自不同的硬件设备的计时器和网络中断（来源于外部设备），外设可以通过中断让操作系统感知到其对操作系统发出的请求")]),_._v(" "),t("blockquote",[t("p",[_._v("为什么应用程序不能直接访问外设？")]),_._v(" "),t("ul",[t("li",[_._v("计算机运行时，内核是被信任的第三方。")]),_._v(" "),t("li",[_._v("只有内核可以执行特权指令。")]),_._v(" "),t("li",[_._v("为了方便应用程序。")])])]),_._v(" "),t("h3",{attrs:{id:"_3-2来源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2来源"}},[_._v("#")]),_._v(" 3.2来源")]),_._v(" "),t("ul",[t("li",[_._v("中断：外设（键盘/鼠标/网卡/声卡/显卡，可以产生各种事件）")]),_._v(" "),t("li",[_._v("异常：应用程序意想不到的行为（e.g.异常，恶意程序，应用程序需要的资源未得到满足）")]),_._v(" "),t("li",[_._v("系统调用：应用程序请求操作提供服务（e.g.打开/关闭/读写文件，发送网络包）")])]),_._v(" "),t("h3",{attrs:{id:"_3-3处理时间"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3处理时间"}},[_._v("#")]),_._v(" 3.3处理时间")]),_._v(" "),t("p",[_._v("异步可以理解为这个操作不知道是什么时候产生的")]),_._v(" "),t("ul",[t("li",[_._v("中断：异步")]),_._v(" "),t("li",[_._v("异常：同步")]),_._v(" "),t("li",[_._v("系统调用：同步或异步")])]),_._v(" "),t("h3",{attrs:{id:"_3-4响应"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4响应"}},[_._v("#")]),_._v(" 3.4响应")]),_._v(" "),t("ul",[t("li",[_._v("中断：持续，对用户应用程序时透明的")]),_._v(" "),t("li",[_._v("异常：杀死或者重新执行意想不到的应用程序指令")]),_._v(" "),t("li",[_._v("系统调用：等待和持续")])]),_._v(" "),t("h2",{attrs:{id:"四、中断和异常的处理过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、中断和异常的处理过程"}},[_._v("#")]),_._v(" 四、中断和异常的处理过程")]),_._v(" "),t("p",[_._v("中断和异常的处理都需要软硬件结合进行处理才可以解决")]),_._v(" "),t("p",[_._v("计算机操作系统在发现出现了中断或者异常时会首先判断应该由哪一个特定的服务例程进行服务，为此需要建立好一个表，key表示的是中断号，每一个中断都会有一个特定的编号，其对应的地址就是处理该异常的特定例程")]),_._v(" "),t("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://gitee.com/lee8150951/picture-bed/raw/master/images/202202101614631.png",alt:"image-20220210161414295"}}),_._v(" "),t("p",[t("strong",[_._v("中断处理过程：")])]),_._v(" "),t("ul",[t("li",[_._v("【硬件】设置中断标记，CPU可以根据这个标记产生一个中断号")]),_._v(" "),t("li",[_._v("【软件】保存被打断的现场（当前处理状态），根据中断号查询终端处理例程进行处理，清楚中断标记，处理完成之后恢复之前保存的处理状态")])]),_._v(" "),t("p",[t("strong",[_._v("异常处理过程：")])]),_._v(" "),t("ul",[t("li",[_._v("【软件】保存被打断的现场（当前处理状态），根据异常编号进行相应的处理\n"),t("ul",[t("li",[_._v("情况一：杀死产生异常的程序")]),_._v(" "),t("li",[_._v("情况二：进行弥补操作，然后重新执行异常指令")])])]),_._v(" "),t("li",[_._v("【软件】恢复现场")])]),_._v(" "),t("h2",{attrs:{id:"五、系统调用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、系统调用"}},[_._v("#")]),_._v(" 五、系统调用")]),_._v(" "),t("ul",[t("li",[_._v("通常情况下，存在于每个系统调用相关的序号，系统调用接口很举着些许好来维护表的索引")]),_._v(" "),t("li",[_._v("用户不需要知道系统调用是如何实现的，只需要获取API和操作系统将返回什么结果即可")]),_._v(" "),t("li",[_._v("操作系统接口的细节大部分都隐藏在了API中，并通过程序支持的库来进行管理")])]),_._v(" "),t("p",[_._v("用户态和内核态")]),_._v(" "),t("ul",[t("li",[_._v("用户态：应用程序在执行过程中，CPU执行的特权级的状态（很低，不能访问特殊的机器指令和IO）")]),_._v(" "),t("li",[_._v("内核态：应用程序在执行过程中，CPU执行的特权级的状态（高，操作系统可以执行CPU中的任何一条指令）")]),_._v(" "),t("li",[_._v("系统调用时涉及到特权级从用户态到内核态的转换，应用程序和操作系统有各自的堆栈，这两个变化比函数调用的开销更大，但是更加安全可靠")])]),_._v(" "),t("h2",{attrs:{id:"六、跨越系统边界的开销"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、跨越系统边界的开销"}},[_._v("#")]),_._v(" 六、跨越系统边界的开销")]),_._v(" "),t("ul",[t("li",[_._v("在执行时间上超过程序调用")]),_._v(" "),t("li",[_._v("开销包括：\n"),t("ul",[t("li",[_._v("建立中断/异常/系统调用号与对应服务例程映射关系的初始化开销；")]),_._v(" "),t("li",[_._v("建立内核堆栈(操作系统和应用程序的堆栈不一样)；")]),_._v(" "),t("li",[_._v("验证参数(操作系统会检查数据)；")]),_._v(" "),t("li",[_._v("内核态映射到用户态的地址空间，更新页面映射权限(内存拷贝开销)；")]),_._v(" "),t("li",[_._v("内核态独立地址空间TLB")])])])])])}),[],!1,null,null,null);v.default=s.exports}}]);