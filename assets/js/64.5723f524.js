(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{559:function(t,a,v){"use strict";v.r(a);var e=v(7),_=Object(e.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"一、任务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、任务"}},[t._v("#")]),t._v(" 一、任务")]),t._v(" "),v("h3",{attrs:{id:"_1-1分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-1分类"}},[t._v("#")]),t._v(" 1.1分类")]),t._v(" "),v("p",[t._v("在javascript中将异步任务细分为宏任务与微任务两种：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("宏任务：")]),t._v(" "),v("ul",[v("li",[t._v("script（整体代码）")]),t._v(" "),v("li",[t._v("异步Ajax请求")]),t._v(" "),v("li",[t._v("setTimeout 、setInterval")]),t._v(" "),v("li",[t._v("I/O操作")]),t._v(" "),v("li",[t._v("其他宏任务")])])]),t._v(" "),v("li",[v("p",[t._v("微任务：")]),t._v(" "),v("ul",[v("li",[t._v("Promise.then、Promise.catch和Promise.finally")]),t._v(" "),v("li",[t._v("process.nextTick")]),t._v(" "),v("li",[t._v("其他微任务")])])])]),t._v(" "),v("h3",{attrs:{id:"_1-2执行顺序"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-2执行顺序"}},[t._v("#")]),t._v(" 1.2执行顺序")]),t._v(" "),v("p",[t._v("每一个宏任务执行完之后，都会检查"),v("strong",[t._v("是否存在待执行的微任务")]),t._v("，如果有，则执行完所有的微任务之后，再执行下一个宏任务")]),t._v(" "),v("p",[v("strong",[t._v("宏任务和微任务交替执行")])]),t._v(" "),v("img",{staticStyle:{zoom:"33%"},attrs:{src:"https://oreo-image-bed-1310232028.cos.ap-shanghai.myqcloud.com/image/202207151958351.png",alt:"image-20220715195847296"}}),t._v(" "),v("p",[t._v("举例：")]),t._v(" "),v("img",{staticStyle:{zoom:"33%"},attrs:{src:"https://oreo-image-bed-1310232028.cos.ap-shanghai.myqcloud.com/image/202207152000491.png",alt:"image-20220715200002463"}}),t._v(" "),v("p",[t._v("首先执行宏任务script，因为这个js脚本本身就是一个宏任务。然后进入该脚本后，开始逐一进行执行和分类，将遇到的所有微任务归为微任务队列，宏任务归为宏任务队列，并将遇到的同步任务直接执行。因此输出顺序如下所示：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("（script开始）\n\t（同步任务）”一缸白米饭“ ”一盆白开水“（同步任务结束）\n\t（微任务执行）”白灼黑木耳“ ”榴莲拼盘“ ”麻婆没豆腐“（微任务结束\n（script结束）\n浏览器进行渲染\n（宏任务）”红烧鸡屁股“（宏任务结束）\n（宏任务）”芥末炒鱼头“ “麻辣卤猪头”（宏任务结束）\n")])])]),v("img",{staticStyle:{zoom:"25%"},attrs:{src:"https://oreo-image-bed-1310232028.cos.ap-shanghai.myqcloud.com/image/202207152014097.png",alt:"image-20220715201440071"}}),t._v(" "),v("h2",{attrs:{id:"二、事件循环-event-loop"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、事件循环-event-loop"}},[t._v("#")]),t._v(" 二、事件循环（Event Loop）")]),t._v(" "),v("p",[t._v("Wikipedia这样定义:")]),t._v(" "),v("blockquote",[v("p",[t._v("Event Loop是一个程序结构，用于等待和发送消息和事件")])]),t._v(" "),v("p",[t._v('就是在程序中设置两个线程：一个负责程序本身的运行，称为"主线程"；另一个负责主线程与其他进程（主要是各种I/O操作）的通信，被称为"Event Loop线程"（可以译为"消息线程"）')]),t._v(" "),v("p",[t._v("事件循环可以简单描述为：")]),t._v(" "),v("ol",[v("li",[t._v("函数入栈，当Stack中执行到异步任务的时候，就将他丢给WebAPIs,接着执行同步任务，直到Stack为空")]),t._v(" "),v("li",[t._v("在此期间WebAPIs完成这个事件，把回调函数放入CallbackQueue中等待")]),t._v(" "),v("li",[t._v("当执行栈为空时，Event Loop把Callback Queue中的一个任务放入Stack中，回到第1步")])]),t._v(" "),v("blockquote",[v("p",[v("strong",[t._v("运行机制：")])]),t._v(" "),v("ul",[v("li",[t._v("执行一个宏任务（栈中没有就从事件队列中获取）")]),t._v(" "),v("li",[t._v("执行过程中如果遇到微任务，就将它添加到微任务的任务队列中")]),t._v(" "),v("li",[t._v("宏任务执行完毕后，立即执行当前微任务队列中的所有微任务（依次执行）")]),t._v(" "),v("li",[t._v("当前宏任务执行完毕，开始检查渲染，然后GUI线程接管渲染")]),t._v(" "),v("li",[t._v("渲染完毕后，JS线程继续接管，开始下一个宏任务（从事件队列中获取）")])])])])}),[],!1,null,null,null);a.default=_.exports}}]);